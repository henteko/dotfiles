export LANG=ja_JP.UTF-8

# [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function
export CC=/usr/bin/gcc

export EDITOR=/usr/bin/vim

export PATH=/opt/local/bin:/opt/local/sbin:$PATH
#homebrew
export PATH=/usr/local/bin:$PATH

export PATH=/usr/local/sbin:$PATH

export PATH=${HOME}/.cabal/bin:$PATH
export PATH="$HOME/Library/Haskell/bin:$PATH"

export ANDROID_HOME=/Users/henteko/Library/Android/sdk/
export ANDROID_NDK=$ANDROID_HOME/ndk-bundle
export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/build-tools/21.1.1
export PATH=$PATH:$ANDROID_NDK

#export JAVA_HOME=$(/usr/libexec/java_home -v 1.7)
#export JAVA_HOME=/opt/homebrew-cask/Caskroom/android-studio/2.2.0/Android\ Studio.app/Contents/jre/jdk/Contents/Home
export BAZEL_HOME="$HOME/.bazel"
export PATH="$PATH:$BAZEL_HOME/bin"

#[[ -s $HOME/.pythonz/etc/bashrc ]] && source $HOME/.pythonz/etc/bashrc
#export PATH=$HOME/.pythonz/pythons/CPython-3.3.2/bin:$PATH

export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME/Desktop/dev/go
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:/usr/local/go/bin

export PATH="$HOME/.cargo/bin:$PATH"

## 履歴の保存先
HISTFILE=$HOME/.zsh-history
## メモリに展開する履歴の数
HISTSIZE=100000
## 保存する履歴の数
SAVEHIST=100000

## 補完機能の強化
fpath=(/usr/local/share/zsh-completions $fpath)
autoload -U compinit
compinit -u

## コアダンプサイズを制限
limit coredumpsize 102400
## 出力の文字列末尾に改行コードが無い場合でも表示
unsetopt promptcr

## 色を使う
setopt prompt_subst
## ビープを鳴らさない
setopt nobeep
## 内部コマンド jobs の出力をデフォルトで jobs -l にする
setopt long_list_jobs
## 補完候補一覧でファイルの種別をマーク表示
setopt list_types
## サスペンド中のプロセスと同じコマンド名を実行した場合はリジューム
setopt auto_resume
## 補完候補を一覧表示
setopt auto_list
## 直前と同じコマンドをヒストリに追加しない
setopt hist_ignore_dups
## cd 時に自動で push
setopt auto_pushd
## 同じディレクトリを pushd しない
setopt pushd_ignore_dups
## ファイル名で #, ~, ^ の 3 文字を正規表現として扱う
setopt extended_glob
## TAB で順に補完候補を切り替える
setopt auto_menu
## zsh の開始, 終了時刻をヒストリファイルに書き込む
setopt extended_history
## =command を command のパス名に展開する
setopt equals
## --prefix=/usr などの = 以降も補完
setopt magic_equal_subst
## ヒストリを呼び出してから実行する間に一旦編集
setopt hist_verify
## ファイル名の展開で辞書順ではなく数値的にソート
setopt numeric_glob_sort
## 出力時8ビットを通す
setopt print_eight_bit
## ヒストリを共有
setopt share_history
## 補完候補のカーソル選択を有効に
zstyle ':completion:*:default' menu select=1
## 補完候補の色づけ
#eval `dircolors`
#export ZLS_COLORS=$LS_COLORS
#zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
## ディレクトリ名だけで cd
setopt auto_cd
## カッコの対応などを自動的に補完
setopt auto_param_keys
## ディレクトリ名の補完で末尾の / を自動的に付加し、次の補完に備える
setopt auto_param_slash
## スペルチェック
setopt correct
## {a-c} を a b c に展開する機能を使えるようにする
setopt brace_ccl
## Ctrl+S/Ctrl+Q によるフロー制御を使わないようにする
setopt NO_flow_control
## コマンドラインの先頭がスペースで始まる場合ヒストリに追加しない
setopt hist_ignore_space
## コマンドラインでも # 以降をコメントと見なす
setopt interactive_comments
## ファイル名の展開でディレクトリにマッチした場合末尾に / を付加する
setopt mark_dirs
## history (fc -l) コマンドをヒストリリストから取り除く。
setopt hist_no_store
## 補完候補を詰めて表示
setopt list_packed
## 最後のスラッシュを自動的に削除しない
setopt noautoremoveslash

#gitのbranch表示のやつ
source /usr/local/Cellar/git/2.15.0/etc/bash_completion.d/git-prompt.sh

### Prompt ###
# プロンプトに色を付ける
autoload -U colors; colors

# 一般ユーザ時
#tmp_prompt="%{${fg[cyan]}%}%n%# %{${reset_color}%}"
#tmp_prompt='%{${fg[cyan]}%}%n@%{${fg[green]}%}%~ %{${fg[red]}%}$(__git_ps1 "(%s) ")%{${fg[cyan]}%}\$ %{${reset_color}%}'
tmp_prompt='%{${fg[cyan]}%}%n@%{${fg[green]}%}%~ %{${fg[yellow]}%}$(if [ $(date +"%k") -gt 18 ] ; then echo "定時だ帰るぞ!!!!"; fi) %{${fg[red]}%}$(__git_ps1 "(%s) ")%{${fg[cyan]}%}\$ %{${reset_color}%}'
tmp_prompt2="%{${fg[cyan]}%}%_> %{${reset_color}%}"
tmp_sprompt="%{${fg[yellow]}%}%r is correct? [Yes, No, Abort, Edit]:%{${reset_color}%}"

# rootユーザ時(太字にし、アンダーバーをつける)
if [ ${UID} -eq 0 ]; then
    tmp_prompt="%B%U${tmp_prompt}%u%b"
    tmp_prompt2="%B%U${tmp_prompt2}%u%b"
    tmp_sprompt="%B%U${tmp_sprompt}%u%b"
fi

PROMPT=$tmp_prompt    # 通常のプロンプト
PROMPT2=$tmp_prompt2  # セカンダリのプロンプト(コマンドが2行以上の時に表示される)
SPROMPT=$tmp_sprompt  # スペル訂正用プロンプト

# anyenv
if [ -d ${HOME}/.anyenv ] ; then
  export PATH="$HOME/.anyenv/bin:$PATH"
  eval "$(anyenv init -)"
  for D in `ls $HOME/.anyenv/envs`
  do
    export PATH="$HOME/.anyenv/envs/$D/shims:$PATH"

    #if [ -d ${HOME}/.anyenv/envs/ndenv ] ; then
    #  for NV in `node -v`
    #  do
    #    export PATH="$HOME/.anyenv/envs/ndenv/versions/$NV/bin:$PATH"
    #  done
    #fi
  done
fi
export PATH="/opt/chefdk/bin:$PATH"

# D lang
export PATH=~/dmd2/osx/bin:$PATH

# added by travis gem
[ -f /Users/kenta.imai/.travis/travis.sh ] && source /Users/kenta.imai/.travis/travis.sh

# alias
function helper() {
  if [ "$2" = "-command" ];then
    echo $1
  else
    eval $1
  fi
}

alias gcp="helper 'git branch | peco | xargs git checkout'"
alias disk_scan="du -md1 | sort -nk1"

# added by travis gem
[ -f /Users/henteko/.travis/travis.sh ] && source /Users/henteko/.travis/travis.sh

# The next line updates PATH for the Google Cloud SDK.
# source '/Users/henteko/google-cloud-sdk/path.zsh.inc'

# The next line enables shell command completion for gcloud.
# source '/Users/henteko/google-cloud-sdk/completion.zsh.inc'

alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

export PATH="$HOME/anaconda/bin:$PATH"

bindkey -e
# https://qiita.com/shepabashi/items/f2bc2be37a31df49bca5
function peco-history-selection() {
    BUFFER=`history -n 1 | tail -r  | awk '!a[$0]++' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}

zle -N peco-history-selection
bindkey '^R' peco-history-selection
